{"name":"ObStore","tagline":"ObStore is a smart persistent Object store.","body":"ObStore\r\n===\r\n\r\n[![Build Status](https://travis-ci.org/parabuzzle/obstore.svg)](https://travis-ci.org/parabuzzle/obstore) [![Coverage Status](https://coveralls.io/repos/parabuzzle/obstore/badge.png?branch=master)](https://coveralls.io/r/parabuzzle/obstore?branch=master) [![Gem Version](https://badge.fury.io/rb/obstore.svg)](http://badge.fury.io/rb/obstore)\r\n\r\nObStore is a smart persistent Object store.\r\n\r\nObStore allows you to save any object to a file along with metadata about that object. You can also set an expiry for an object and ObStore will lazily delete the data for you.\r\n\r\n# Installation\r\n\r\nAdd it to your gemfile\r\n```\r\ngem 'obstore'\r\n```\r\n\r\nInstall using bundler\r\n```\r\nbundle install\r\n```\r\n\r\nor install manually\r\n```\r\ngem install obstore\r\n```\r\n\r\n# Usage\r\nUsing ObStore is simple.\r\n\r\n### Basic Usage\r\nYou can use ObStore to save objects to a local file for use later or by other apps\r\n```\r\nrequire 'obstore'\r\n\r\n# Create an obstore object\r\n@obstore = ObStore::FileStore.new('./obstore.db')\r\n\r\n# save any object you want to persist using dot syntaxing\r\n@obstore.metrics = {:stat1=>123, :stat2=>456}\r\n@obstore.anything = \"can be set to anything\"\r\n\r\n# retrieve the object\r\nmetrics = @obstore.metrics.data     #=> {:stat1=>123, :stat2=>456}\r\nanything = @obstore.anything.fetch  #=> \"can be set to anything\"\r\n```\r\n\r\n### Keys that Expire\r\nObStore will check if your data is expired and clean the db on fetch for you (lazy expiry)\r\n```\r\n@obstore.metrics = {:stat1=>123, :stat2=>456}, {:expiry=>10} #expiry is seconds\r\n@obstore.metrics.data #=> {:stat1=>123, :stat2=>456}\r\nsleep 11\r\n@obstore.metrics #=> nil\r\n```\r\n\r\n### Metadata for your object (dimensions)\r\nObStore supports adding as much metadata as you like about the object you are saving\r\n```\r\n@obstore.metrics = {:stat1=>123, :stat2=>456}, {:expiry=>10, :metadata=>{:extra=>\"foo\"}}\r\n@obstore.metrics.extra #=> \"foo\"\r\n```\r\n\r\n### Clean all Expired keys\r\nObStore can remove all expired data at once (run this in a cronjob?)\r\n```\r\n@obstore.compact!\r\n```\r\n\r\n# Contributing\r\n * fork the repository\r\n * create a feature branch\r\n * add your awesome code\r\n * send a pull request\r\n * have a beer\r\n\r\n# TODO\r\n * Redis Support in Place of FileStore as a choice\r\n * Abstract Storage Provider\r\n * Make the code less clever...\r\n\r\n# License\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Michael Heijmans\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}